my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 3, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
#Quartic Regression
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 4, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
sqrt(90000)
#Quartic Regression
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 8, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
#Quartic Regression
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 4, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]+my.lm$coefficients[[2]]*x+my.lm$coefficients[[3]]*x**2 + my.lm$coefficients[[4]]*x**3 + my.lm$coefficients[[5]]*x**4
lines(x,y ,col='red', lwd=2.5)
#5th degree
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 5, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
mean(sm$residuals**2)
sm
#6th degree
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 6, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
#6th degree
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 6, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
#7th degree
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 7, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
#8th degree
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 8, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
sm
MakeYCoords=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=c()
for (i in seq(1,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(3)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=c()
for (i in seq(1,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(3)
c(1,2)+c(3,4)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[i]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
print(length((x)))
print(length(y))
lines(x,y ,col='red', lwd=2.5)
}
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
print(length((x)))
print(length(y))
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(3)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(2)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
print('test')
}
NthRegression(2)
print(x,y)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
mean(sm$residuals**2)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
print(x)
print(y)
}
NthRegression(2)
for (i in seq(2,2)){}
for (i in seq(2,2)){
print(2)
}
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
print(x)
print(y)
}
NthRegression(2)
}
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(2)
my.lm
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
#for (i in seq(2,n)){
#  y=y + my.lm$coefficients[[i]]*x**(i-1)
#}
lines(x,y ,col='red', lwd=2.5)
}
print(y)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=my.lm$coefficients[[1]]
#for (i in seq(2,n)){
#  y=y + my.lm$coefficients[[i]]*x**(i-1)
#}
lines(x,y ,col='red', lwd=2.5)
print(y)
}
NthRegression(2)
my.lm$coefficients[[1]]
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
#for (i in seq(2,n)){
#  y=y + my.lm$coefficients[[i]]*x**(i-1)
#}
lines(x,y ,col='red', lwd=2.5)
print(y)
}
NthRegression(2)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
print(y)
}
NthRegression(2)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
print(y)
}
NthRegression(2)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print(mean(sm$residuals**2))
print(sm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(2)
sm$terms
sm
sm
median(sm$residuals)
print("this is a regression of Degree: " n)
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ", end=' ')
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthRegression(2)
?print
NthRegression=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ")
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
NthDegree(1)
NthRegression(1)
NthRegression(100)
NthRegression(10)
NthRegression(1)
NthRegression(5)
NthRegression(9)
NthRegression(8)
NthRegression(7)
NthRegression(6)
NthRegression(5)
1000**6
2**32
2**64
2**1024
print(sm)
NthRegression=function(n,sm){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ")
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (sm){
print(sm)
}
}
NthRegression(5,TRUE)
NthRegression=function(n,sm){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ")
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (sm==TRUE){
print(sm)
}
}
NthRegression(5,TRUE)
NthRegression=function(n,SM){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ")
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
}
NthRegression(5,TRUE)
NthRegression(5,FALSE)
NthRegression(9,FALSE)
NthRegression(9,TRUE)
for (i in seq(1,100)){
NthRegression(i,FALSE)
}
?writeLines
NthRegression=function(n,SM){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ")
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(5)
}
a=NthRegression(3)
NthRegression=function(n,SM=FALSE){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
print("this is a regression of Degree: ")
print(n)
print(mean(sm$residuals**2))
print(median(sm$residuals))
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(5)
}
NthRegression(3)
a=NthRegression(3)
a
NthRegression=function(n,SM=FALSE){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(n,mean(sm$residuals**2),median(sm$residuals))
}
fileBlaBla=file("output.txt")
writeLines('Hoi')
getwd()
fileBlaBla=file("output.txt")
writeLines('Hoi',fileBlaBla)
fileBlaBla=file("output.txt")
for (i in seq(1,100)){
writeLines(NthRegression(i,FALSE),fileBlaBla)
}
NthRegression=function(n,SM=FALSE){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(c(n,mean(sm$residuals**2),median(sm$residuals)))
}
fileBlaBla=file("output.txt")
for (i in seq(1,100)){
writeLines(NthRegression(i,FALSE),fileBlaBla)
}
str(c(1,2))
fileBlaBla=file("output.txt")
for (i in seq(1,100)){
writeLines(NthRegression(i,FALSE)[1],fileBlaBla)
}
fileBlaBla=file("output.txt")
for (i in seq(1,100)){
writeLines(str(NthRegression(i,FALSE)[1]),fileBlaBla)
}
NthRegression(2)[1]
str(NthRegression(2)[1])
?write
fileBlaBla=file("output.txt")
for (i in seq(1,100)){
write(str(NthRegression(i,FALSE)[1]),fileBlaBla)
}
w
for (i in seq(1,100)){
write(str(NthRegression(i,FALSE)),fileBlaBla)
}
for (i in seq(1,100)){
write(NthRegression(i,FALSE),fileBlaBla)
}
for (i in seq(1,100)){
write(NthRegression(i,FALSE),fileBlaBla,sep='\n',append=TRUE)
}
fileBlaBla=file("output.txt")
for (i in seq(1,100)){
write(NthRegression(i,FALSE),"output.txt",sep='\n',append=TRUE)
}
("output.txt")
fileBlaBla=file("output.txt")
write('',fileBlaBLa)
fileBlaBla=file("output.txt")
write('',fileBlaBla)
for (i in seq(1,100)){
write(NthRegression(i,FALSE),"output.txt",sep='\n',append=TRUE)
}
