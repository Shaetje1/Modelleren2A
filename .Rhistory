}
library("readxl")
Data=read.csv("Battery_train.csv")
x=seq(1,2058)
y=rep(0.88,2058)
plot(x,y,type='l',lty=2, col='red',ylim=c(0.85,1.1),xlab='Cycle #', ylab='Capacity (Ah)')
text(1800,0.85,'Threshold: 0.88',col="red")
for (i in seq(2,80)){
lines(x,Data[[i]])
}
TotalCycles=c()
for(i in seq(2,80)){
for(j in seq(1,2059)){
if(is.na(Data[[i]][j])){
TotalCycles=append(TotalCycles,j-1)
break
}
}
}
PlotData=function(){
plot(Data[[2]],seq(2058,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(3,80)){
lines(Data[[i]],append(seq(TotalCycles[i-1],1),rep(0,2058-TotalCycles[i-1])))
}
}
#Making the data 1 big list
TransformedData=c()
TransformedData$Capacity=c()
TransformedData$RUL     =c()
for (i in seq(2,80)){
TransformedData$Capacity=append(TransformedData$Capacity,Data[[i]])
TransformedData$RUL=append(TransformedData$RUL,append(seq(TotalCycles[i-1],1),rep(0,2058-TotalCycles[i-1])))
}
NthRegression=function(n,SM=FALSE){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(c(n,mean(sm$residuals**2),median(sm$residuals)))
}
fileBlaBla=file("output.txt")
write('',fileBlaBla)
for (i in seq(1,100)){
write(NthRegression(i,FALSE),"output.txt",sep='\n',append=TRUE)
}
#Test data
Data2=read.csv("Battery_test.csv")
x=seq(1,1696)
y=rep(0.88,1696)
plot(x,y,type='l',lty=2,col='red',ylim=c(0.85,1.1),xlab="t (Cycles)", ylab="Capacity (Ah)")
text(1200,0.85,"Threshold: 0.88", col='red')
for(i in seq(2,11)){
lines(x,Data2[[i]])
}
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 3, raw = TRUE))
confint(my.lm)
summary(my.lm)
PlotData()
#Test data
Data2=read.csv("Battery_test.csv")
x=seq(1,1696)
y=rep(0.88,1696)
plot(x,y,type='l',lty=2,col='red',ylim=c(0.85,1.1),xlab="t (Cycles)", ylab="Capacity (Ah)")
text(1200,0.85,"Threshold: 0.88", col='red')
for(i in seq(2,11)){
lines(x,Data2[[i]])
}
View(Data2)
Data2[10]''
Data2[1]
Data2[10]
Data2[11]
Data2[12]
TotalCycles2=c()
for(i in seq(2,11)){
for(j in seq(1,1697)){
if(is.na(Data2[[i]][j])){
TotalCycles2=append(TotalCycles2,j-1)
break
}
}
}
TotalCycles2
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(3,11)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData()
#Making the data 1 big list
TransformedData2=c()
TransformedData2$Capacity=c()
TransformedData2$RUL     =c()
for (i in seq(2,11)){
TransformedData2$Capacity=append(TransformedData2$Capacity,Data[[i]])
TransformedData2$RUL=append(TransformedData2$RUL,append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
View(TransformedData2)
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 1, raw = TRUE))
my.lm
NthRegression(1)
NthRegression(2,TRUE)
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 2, raw = TRUE))
my.lm
TransformedData2
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
return(y)
}
NthRegPoly(2,1)
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
print(y)
}
return(y)
}
NthRegPoly(2,1.05)
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 2, raw = TRUE))
my.lm$coefficients
NthRegression(2,TRUE)
16043.5-35742+19924
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
return(y)
}
NthRegPoly(2,1)
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
y=my.lm$coefficients[1]
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
return(y)
}
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
y=my.lm$coefficients[[1]]
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
return(y)
}
NthRegPoly(2,1)
residuals=c(1,2,3)
residuals**2
mean(residuals**2)
len(TransformedData2)
length(TransformedData2)
Length(TransfromedData2[1])
length(TransformedData2[1])
TransformedData2
length(TransformedData2$Capacity)
Length(TransformedData2$RUL)
length(TransformedData2$RUL)
TransformedData2
TransformedData2$RUL
View(TransformedData2)
View(TransformedData)
View(Data2)
#Making the data 1 big list
TransformedData2=c()
TransformedData2$Capacity=c()
TransformedData2$RUL     =c()
for (i in seq(2,11)){
TransformedData2$Capacity=append(TransformedData2$Capacity,Data[[i]])
TransformedData2$RUL=append(TransformedData2$RUL,append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
y=my.lm$coefficients[[1]]
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
return(y)
}
View(TransformedData2)
#Making the data 1 big list
TransformedData2=c()
TransformedData2$Capacity=c()
TransformedData2$RUL     =c()
for (i in seq(2,11)){
TransformedData2$Capacity=append(TransformedData2$Capacity,Data2[[i]])
TransformedData2$RUL=append(TransformedData2$RUL,append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
View(TransformedData2)
TransformedData2$Capacity[16960]
TransformedData2$Capacity[16961]
TransformedData2$Capacity[1696222]
TransformedData2$Capacity[1]
NthRegression(50)
NthRegression(50,TRUE)
MSEforecast=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
Residuals=c()
for (i in seq(1,16960)){
Residuals = append(Residuals, TransformedData2$RUL[i]-NthRegPoly(n,TransformedData2$Capacity[i]))
Residuals=Residuals**2
return(mean(Residuals))
}
}
MSEforecast(2)
MSEforecast(3)
MSEforecast(4)
MSEforecast(40)
MSEforecast(5)
MSEforecast(6)
PlotData2
PlotData2(0)
PlotData2()
PlotForecast=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
PlotForecast(2)
PlotForecast(3)
PlotData2
PlotData2()
PlotForecast(4)
PlotForecast(5)
PlotForecast(2)
MSEforecast(1)
MSEforecast(2)
MSEforecast(3)
MSEforecast(4)
MSEforecast(5)
MSEforecast(6)
MSEforecast(7)
5+NA
NthRegression(100,TRUE)
x=c()
y=c()
NthRegression(1)
y1=c()
y2=c()
NthRegression(1)[2]
for (i in seq(1,100)){}
for (i in seq(1,100)){
x=append(x,i)
y1=append(y1,NthRegression(i)[2])
y2=append(y2,NthRegression(1)[3])
}
for (i in seq(1,100)){
x=append(x,i)
y1=append(y1,NthRegression(i)[2])
y2=append(y2,NthRegression(1)[3])
}
x=c()
y1=c()
y2=c()
for (i in seq(1,100)){
x=append(x,i)
y1=append(y1,NthRegression(i)[2])
y2=append(y2,NthRegression(1)[3])
}
plot(x,y1)
plot(x,y2)
y2
x=c()
y1=c()
#Plots comparing degrees
x=c()
y1=c()
y2=c()
for (i in seq(1,100)){
x=append(x,i)
y1=append(y1,NthRegression(i)[2])
y2=append(y2,NthRegression(i)[3])
}
plot(x,y1)
plot(x,y2)
plot(x,y1)
plot(x,y2)
y1=c()
NthRegression(5)
?lm
?poly
install.packages("colf")
?colf
NthRegression(5)
NthRegression(4)
NthRegression(3)
?colf_nls
library(colf)
?colf_nls
colf_nls(TransformedData$RUL ~ poly(TransformedData$Capacity, 5, raw = TRUE),lower=c(0,0,0,0,0,0))
?lm
my.lm=colf_nls(TransformedData$RUL ~ poly(TransformedData$Capacity, 5, raw = TRUE),lower=c(0,0,0,0,0,0))
my.lm=colf_nls(TransformedData$RUL ~ poly(TransformedData$Capacity, 5, raw = TRUE),data=TransformedData,lower=c(0,0,0,0,0,0))
my.lm=colf_nls(TransformedData$RUL ~ poly(TransformedData$Capacity, 5, raw = TRUE),data=TransformedData$RUL,lower=c(0,0,0,0,0,0))
my.lm=colf_nls(TransformedData$RUL ~ poly(TransformedData$Capacity, 5, raw = TRUE),data=DF,lower=c(0,0,0,0,0,0))
DF=data.frame(x1,x2,x3,x4,x5,RUL)
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
PlotForecast=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
lines(x,y ,col='red', lwd=2.5)
}
PlotData2()
PlotForecast(4)
?nnnpls
NthRegression(3)
MSEforecast(2)
PlotData2()
PlotForecast(1)
PlotForecast(2)
PlotForecast(3)
PlotForecast(4)
PlotForecast(5)
MSEforecast(1)
MSEforecast(2)
MSEforecast(3)
MSEforecast(4)
MSEforecast(5)
TransformedData2$RUL
View(TransformedData2)
View(TransformedData2)
View(Data2)
View(Data2)
PlotData()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(3,10)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(4,11)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(5,11)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(6,11)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(6,10)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(6,9)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
for(i in seq(6,7)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(6,7)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(3,11)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotData2=function(){
plot(Data2[[2]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
#for(i in seq(3,11)){
#  lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
#}
}
PlotData2()
Data2[[2]]
TotalCycles2
View(Data)
PlotData2=function(){
plot(Data2[[11]],seq(1696,1),type='l', xlab='Capacity (Ah)',ylab="RUL (Cycles)",xlim=c(0.86999,1.1))
for(i in seq(2,10)){
lines(Data2[[i]],append(seq(TotalCycles2[i-1],1),rep(0,1696-TotalCycles2[i-1])))
}
}
PlotData2()
PlotForecast(3)
MSEforecast(1)
MSEforecast(2)
MSEforecast(3)
MSEforecast(4)
MSEforecast(5)
?is.na
NthRegression=function(n,SM=FALSE){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
if (is.na(my.lm$coefficients)==FALSE){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(c(n,mean(sm$residuals**2),median(sm$residuals)))
}
NthRegression(10)
is.na(4)
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, 10, raw = TRUE))
NthRegression=function(n,SM=FALSE){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
PlotData()
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
if (is.na(my.lm$coefficients[[i]])==FALSE){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}}
lines(x,y ,col='red', lwd=2.5)
if (SM==TRUE){
print(sm)
}
return(c(n,mean(sm$residuals**2),median(sm$residuals)))
}
NthRegression(10)
NthRegression(100)
NthRegression(420)
NthRegPoly=function(n,x){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
y=my.lm$coefficients[[1]]
for (i in seq(2,n+1)){
if (is.na(my.lm$coefficients[[i]])==FALSE){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}
}
return(y)
}
PlotData2()
PlotForecast(33)
NthRegPoly(33,1)
PlotData2()
PlotForecast(2)
PlotForecast(6)
PlotForecast=function(n){
my.lm=lm(TransformedData$RUL ~ poly(TransformedData$Capacity, n, raw = TRUE))
sm=summary(my.lm)
x=seq(from=0.8,to=1.1,by=0.001)
y=rep(my.lm$coefficients[[1]],length(x))
for (i in seq(2,n+1)){
if (is.na(my.lm$coefficients[[i]])==FALSE){
y=y + my.lm$coefficients[[i]]*x**(i-1)
}}
lines(x,y ,col='red', lwd=2.5)
}
PlotForecast(17)
PlotData2()
PlotForecast(17)
MSEforecast(17)
for (i in seq(1,100)){
MSEforecast(i)
}
for (i in seq(1,100)){
print(MSEforecast(i))
}
?boot
library(boot, lib.loc = "C:/Program Files/R/R-4.2.1/library")
??boot
?boot
